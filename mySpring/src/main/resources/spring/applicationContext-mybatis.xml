<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置sqlSessionFactory(包含通用Mapper与分页插件) -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <array>
                <value>classpath*:com/tom/business/**/mapping/*.xml
                </value>
            </array>
        </property>
        <property name="typeAliasesPackage" value="com.tom.**.model"/>
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageHelper">-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--helperDialect=mysql-->
                            <!--reasonable=true-->
                            <!--supportMethodsArguments=true-->
                            <!--params=count=countSql-->
                            <!--autoRuntimeDialect=true-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tom.business.**.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" rollback-for="Exception"/>
            <tx:method name="save*" rollback-for="Exception"/>
            <tx:method name="insert*" rollback-for="Exception"/>
            <tx:method name="update*" rollback-for="Exception"/>
            <tx:method name="*TxPro" rollback-for="Exception"/>
            <tx:method name="select*" read-only="true" rollback-for="Exception"/>
            <tx:method name="get*" read-only="true" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <!-- Spring AOP事务管理 -->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* *..service..*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut"
                     advice-ref="transactionAdvice"/>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>